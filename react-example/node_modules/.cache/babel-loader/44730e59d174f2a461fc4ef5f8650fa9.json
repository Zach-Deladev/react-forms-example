{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react-forms-example/react-example/src/components/UncontrolledForm.js\";\n// React Uncontrolled forms\n// features - less featureful due to lack of control over input fields\n//  Pro's - Easier to implement than controlled forms, \nimport React, { Component } from \"react\";\nexport class UncontrolledForm extends Component {\n  constructor(props) {\n    super(props); // This allows react to link to the input through a ref attribute\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // Test to see if correct values are being logged\n\n      console.log(this.inputName.current.value);\n      console.log(this.inputCategory.current.value);\n      console.log(this.inputComments.current.value);\n    };\n\n    this.inputName = /*#__PURE__*/React.createRef();\n    this.inputCategory = /*#__PURE__*/React.createRef();\n    this.inputComments = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Please fill out the Uncontrolled form below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"id-name\",\n            children: \"Your Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"id-name\",\n            name: \"name\",\n            type: \"text\",\n            ref: this.inputName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"id-category\",\n            children: \"Query category: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            id: \"id-category\",\n            ref: this.inputCategory,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"website\",\n              children: \"Website issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"order\",\n              children: \"Order issue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"general\",\n              children: \"General inquiry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"id-comments\",\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"id-comments\",\n            name: \"comments\",\n            ref: this.inputComments //   Can add a default value to inputs by using defaultValue=\"John Smith\"\n            ,\n            defaultValue: \"John Smith\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default UncontrolledForm;","map":{"version":3,"sources":["/workspace/react-forms-example/react-example/src/components/UncontrolledForm.js"],"names":["React","Component","UncontrolledForm","constructor","props","handleSubmit","event","preventDefault","console","log","inputName","current","value","inputCategory","inputComments","createRef","render"],"mappings":";;AAAA;AAGA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,gBAAN,SAA+BD,SAA/B,CAAyC;AAC9CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACC,cAAN,GADwB,CAGxB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAnC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKI,aAAL,CAAmBF,OAAnB,CAA2BC,KAAvC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKK,aAAL,CAAmBH,OAAnB,CAA2BC,KAAvC;AACD,KAfkB;;AAGjB,SAAKF,SAAL,gBAAiBV,KAAK,CAACe,SAAN,EAAjB;AACA,SAAKF,aAAL,gBAAqBb,KAAK,CAACe,SAAN,EAArB;AACA,SAAKD,aAAL,gBAAqBd,KAAK,CAACe,SAAN,EAArB;AACD;;AAWDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKX,YAArB;AAAA,gCACE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,EAAE,EAAC,SAAV;AAAoB,YAAA,IAAI,EAAC,MAAzB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,GAAG,EAAE,KAAKK;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,IAAI,EAAC,UAAb;AAAwB,YAAA,EAAE,EAAC,aAA3B;AAAyC,YAAA,GAAG,EAAE,KAAKG,aAAnD;AAAA,oCACE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,GAAG,EAAE,KAAKC,aAHZ,CAIE;AAJF;AAKE,YAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAwBE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAlD6C;AAqDhD,eAAeZ,gBAAf","sourcesContent":["// React Uncontrolled forms\n\n\n// features - less featureful due to lack of control over input fields\n//  Pro's - Easier to implement than controlled forms, \n\nimport React, { Component } from \"react\";\n\nexport class UncontrolledForm extends Component {\n  constructor(props) {\n    super(props);\n    // This allows react to link to the input through a ref attribute\n    this.inputName = React.createRef();\n    this.inputCategory = React.createRef();\n    this.inputComments = React.createRef();\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Test to see if correct values are being logged\n    console.log(this.inputName.current.value);\n    console.log(this.inputCategory.current.value);\n    console.log(this.inputComments.current.value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Please fill out the Uncontrolled form below</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"id-name\">Your Name: </label>\n            <input id=\"id-name\" name=\"name\" type=\"text\" ref={this.inputName} />\n          </div>\n\n          <div>\n            <label htmlFor=\"id-category\">Query category: </label>\n            <select name=\"category\" id=\"id-category\" ref={this.inputCategory}>\n              <option value=\"website\">Website issue</option>\n              <option value=\"order\">Order issue</option>\n              <option value=\"general\">General inquiry</option>\n            </select>\n          </div>\n          <div>\n            <label htmlFor=\"id-comments\">Comments:</label>\n            <textarea\n              id=\"id-comments\"\n              name=\"comments\"\n              ref={this.inputComments}\n              //   Can add a default value to inputs by using defaultValue=\"John Smith\"\n              defaultValue=\"John Smith\"\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UncontrolledForm;\n"]},"metadata":{},"sourceType":"module"}